Planificator de threaduri

Implementare structuri :
  
  ->  Structura thread
      - handler/priority
      - id-ul thread-ului 
      - starea curenta (new/ready/waiting/terminated) si un
      - semafor care blocheaza thread-ul pana e planificat
  
  ->  Structura schduler 
      - quant/io;
      - running_thread, pointer la thread-ul curent
      - running... absolut degeaba
        
  ->  Structura thread_manager
      - lise cu threadu-rile running/waiting/terminated
      - max_ready_prio, prioritatea cea mai mare din lista ready
 
 
Functii : 
  
  ->  so_init
      - aloca sheduler-ul si initializeaza parametrii lui
      - semaforul de exit (al scheduler-ului) e deschis by default
   
  ->  so_fork
      - aloca/initializeaza structura thread
      - creeaza thread nou propriuzis
      - semaforul thread-ului e by default inchis
      - se inchide semaforul schduler-ului la primul apel fork, odata cu aparitia primului thread
      
  ->  start_thread
      - blocheaza thread-ul pana e planificat
      - ruleaza handler-ul
      - schimba starea thread-ului in Terminated 
      
  ->  schedule      
      - apelata dupa fiecare instructiune care consuma timp pe procesor
      - verifica daca thread-ul curent este preemptat sau si a terminat executia
      - planifica urmatorul thread din lista ready
      - inchide semaforul thread-ului preemptat si deschide semaforul thread-ului plainificat
      - insereza/extrage thread-uri din listele managerului 
      - thread-ul preemptat se blocheaza in functia schedule() si este trezit doar cand este replanificat
      - daca lista de ready threads e goala si thread-ul curent si a terminat executia, se dechide semaforul scheduler-ului 
  
  -> get_next_thread  
       - intoarce pointer la primul thread cu prioritate maxima din lista
       - intoarce NULL daca lista e goala
   
  -> remove_thread_ready
      - sterge din lista de thread-uri ready elementual cu starea data ca parametru
      - dealoca structura thread-ului sters
   
  -> insert_thread  
       - inseara in thread manager in functie de starea thread-ului la momentul apelului
       - in listele de waiting si terminated, thread-urile se adauga in no particular order
       - inserarea in lista de ready se face in 'segmente' ale listei, in functie de prioritate
       ( thread-urile noi ajung la capatul segmentului care stocheaza elementele cu aceeasi
         prioritate, iar la extragere (get_next_thread) thread-ul selectat e cel de la inceputul
         segmentului cu prioritatea maxima )
            
             |ready_th_a| -> |ready_th_b| -> |ready_th_c| -> |ready_th_d| -> |ready_th_e| -> |ready_th_f| ->|NULL|   
                   |               |               |               |               |               | 
              (prio = 0)      (prio = 1)      (prio = 1)      (prio = 3)      (prio = 5)      (prio = 5)           
            
                    \/
              
              get_next_ready(); returns 'ready_th_e'  
              
                    \/
                    
              remove_thread_ready(ready_th_e);
              
                    \/

             |ready_th_a| -> |ready_th_b| -> |ready_th_c| -> |ready_th_d| -> |ready_th_f| ->|NULL|  
                   |               |               |               |               |                
              (prio = 0)      (prio = 1)      (prio = 1)      (prio = 3)      (prio = 5)            

                    \/

              instert_thread(ready_th_g, prio = 3);

                    \/

             |ready_th_a| -> |ready_th_b| -> |ready_th_c| -> |ready_th_d| -> |ready_th_g| -> |ready_th_f| ->|NULL|  
                   |               |               |               |               |                
              (prio = 0)      (prio = 1)      (prio = 1)      (prio = 3)      (prio = 3)       (prio = 5)
    
    
    
  -> so_end
      - la dupa ce se trece de semaforul scheduler-ului, se stie cu certitudine ca nu mai exista thread-uri decat
        in listele de ready/terminated
      - astepata terminarea proriuzisa a tuturor thread-urilor
      - dealoca lista terminated si structurile schduler si thread_manager
  
  
